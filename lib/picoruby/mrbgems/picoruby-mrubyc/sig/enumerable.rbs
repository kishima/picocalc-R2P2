
interface _Each[out A]
  def each: () { (A) -> void } -> void
end

# @sidebar builtin
module Enumerable[unchecked out Elem] : _Each[Elem]
  def collect: [U] () { (Elem arg0) -> U } -> ::Array[U]
  alias map collect

  def each_with_index: () { (Elem, Integer index) -> untyped } -> self
end
